#################################################################################################################
#image: docker
image: git.caas.ucalgary.ca:4567/valeriu.jecov/ucautomation:latest
#image: git.caas.ucalgary.ca:4567/ws/drupal8/qa/automation-testing:latest


#################################################################################################################
#before_script:
#  - echo "this is the before_script in action - will install frameworks' plugins"
#  - npm install      # temporarily disabled for testing (this should be installed when the image is built not every time when running a test)
#  - ls -al $PWD
#  - echo "expect docker image to be up - tst env is ready for running the tests"
#  - echo



#################################################################################################################
stages:
#  - build_automated_env
#  - automation_tests      #stage for all jobs including both manual and automated ones
#  - tests_run_automated   #stage for the automated jobs only
#  - tests_run_manual      #stage for the manual jobs only
  - other_proj_pipeline_triger

#build_automated_env:
#  stage: build_automated_env
#  image: git.caas.ucalgary.ca:4567/valeriu.jecov/ucautomation:latest
#  script:
#  - npm install
#  - echo "expected docker image to be up - tst env should be ready for tests"



#################################################################################################################
# running 2 groups of automated jobs as we have the ability to have 2 parallel runs within BrowserStack
#autoRun_Group1:
#  stage: tests_run_automated
#  script:
#    - echo "automated test run -------------------------------------------------------------------------------------"
    #  - echo "npm run uclaw:test1 -- --env=tst --appName=ucLaw --browserStack=true"
#    - npm run generic:AllUserRolesLoginLogoutSuccessfully -- --env=tst --appName=ucLaw --browserStack=true

    #  --- below there are more examples of running tests (with & without GitLab Variables):
    #  - ${npm_run_test}
#    - npm run uclaw:test1 -- --env=tst --appName=ucLaw --browserStack=true
#    - npm run ${testName} -- --env=tst --appName=ucLaw --browserStack=true --browserStackArgs=${browserStackArgs1}
    #  - npm run ${testName} -- --env=${env} --appName=ucLaw --browserStack=true  #this also works
#    - echo

#  when: manual
#  allow_failure: false

#  only:
#    - master      # the test/job will run only in master branch

#  artifacts:
#    reports:
#      junit: rspec.xml
  #      junit: ${testName}.xml

#  environment:  # not sure what the one below does - is it needed?!
#    name: ${env}
#    url: https://law-tst.ucalgary.ca

#################################################################################################################
#autoRun_Group2:
#  stage: tests_run_automated
#  script:
#    - echo "automated test run -------------------------------------------------------------------------------------"
#    - npm run generic:ValidateInternalMenuAsSiteAdmin -- --env=tst --appName=ucLaw --browserStack=true
#    - npm run generic:ValidateInternalMenuAsContentAdmin -- --env=tst --appName=ucLaw --browserStack=true
#    - npm run generic:ValidateInternalMenuAsContentEditor -- --env=tst --appName=ucLaw --browserStack=true
#    - echo

#  when: manual
#  allow_failure: false

#  only:
#    - master      # the test/job will run only in master branch

#  artifacts:
#    reports:
#      junit: rspec.xml

#  environment:    # not sure what the one below does - is it needed?!
#    name: ${env}
#    url: https://law-tst.ucalgary.ca

#################################################################################################################
otherProj_PipelineTrigger:
  stage: other_proj_pipeline_triger
  script:
    - echo "other project pipeline trigger test -----------------------------------------------------------------"
    - "curl -X POST -F token=f48fdf043c5738b97ed4426b6c474f -F ref=master https://git.caas.ucalgary.ca/api/v4/projects/81/trigger/pipeline"
    #- curl --request POST --form "token=$CI_JOB_TOKEN" --form ref=master https://git.caas.ucalgary.ca/api/v4/projects/81/trigger/pipeline
    - echo

  #  when: manual
  allow_failure: false

  only:
    - master      # the test/job will run only in master branch

    


#################################################################################################################
# THE INTENTION OF THE BELOW JOBS / RUNS ARE FOR ALL THE AVAILABLE TESTS TO BE RUN MANUALLY IF / WHEN NEEDED
#################################################################################################################
#AllUserRolesLoginLogoutSuccessfully:
#  stage: tests_run_manual
#  script:
#    - echo "manual test run -------------------------------------------------------------------------------------"
#    - npm run generic:AllUserRolesLoginLogoutSuccessfully -- --env=tst --appName=ucLaw --browserStack=true
#    - echo

#  when: manual
#  allow_failure: false
#  allow_failure: true

#  only:
#    - master      # the test/job will run only in master branch

#  environment:    # not sure what the one below does - is it needed?!
#    name: ${env}
#    url: https://law-tst.ucalgary.ca

#################################################################################################################
#ValidateInternalMenuAsSiteAdmin:
#  stage: tests_run_manual
#  script:
#    - echo "manual test run -------------------------------------------------------------------------------------"
#    - npm run generic:ValidateInternalMenuAsSiteAdmin -- --env=tst --appName=ucLaw --browserStack=true
#    - echo

#  when: manual
#  allow_failure: false
#  allow_failure: true

#  only:
#    - master      # the test/job will run only in master branch

#  environment:    # not sure what the one below does - is it needed?!
#    name: ${env}
#    url: https://law-tst.ucalgary.ca

#################################################################################################################
#ValidateInternalMenuAsContentAdmin:
#  stage: tests_run_manual
#  script:
#    - echo "manual test run -------------------------------------------------------------------------------------"
#    - npm run generic:ValidateInternalMenuAsContentAdmin -- --env=tst --appName=ucLaw --browserStack=true
#    - echo

#  when: manual
#  allow_failure: false
#  allow_failure: true

#  only:
#    - master      # the test/job will run only in master branch

#  environment:    # not sure what the one below does - is it needed?!
#    name: ${env}
#    url: https://law-tst.ucalgary.ca

#################################################################################################################
#ValidateInternalMenuAsContentEditor:
#  stage: tests_run_manual
#  script:
#    - echo "manual test run -------------------------------------------------------------------------------------"
#    - npm run generic:ValidateInternalMenuAsContentEditor -- --env=tst --appName=ucLaw --browserStack=true
#    - echo

#  when: manual
#  allow_failure: false
#  allow_failure: true

#  only:
#    - master      # the test/job will run only in master branch

#  environment:    # not sure what the one below does - is it needed?!
#    name: ${env}
#    url: https://law-tst.ucalgary.ca



#################################################################################################################



#after_script:
#  - echo "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ tests run done ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"